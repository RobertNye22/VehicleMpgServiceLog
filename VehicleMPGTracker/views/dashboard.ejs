<!DOCTYPE html>
<html lang="en">
<head>
	<title>Dashboard</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<!-- Include Bootstrap CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	<style>
		.content {
			margin-top: 30px;
		}
	</style>
   <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
   <link rel="stylesheet" type="text/css" href="font/bootstrap-icons.css" />
</head>
<body class="bg-light">
	<nav class="navbar navbar-expand-lg navbar-light bg-dark pt-3 pb-3">
    <a class="navbar-brand text-white" href="dashboard">AutoLogix</a>
    <button class="navbar-toggler bg-white" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link text-white" href="filluphistory">Fill History</a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white" href="loghistory">Service History</a>
        </li>
        <li class="nav-item d-md-none">
          <a class="nav-link text-white" href="/register">Logout</a>
        </li>
      </ul>
    </div>
    <div class="navbar-nav ml-auto d-none d-md-block">
      <li class="nav-item">
        <a
          class="nav-link text-white"
          style="margin-left: 1rem; padding-right: 1rem"
          href="/register"
          >Logout</a
        >
      </li>
    </div>
  </nav>
  

  <div class="container">
    <div class="row">
      <div class="col-sm-4 mt-3">
        <div class="card shadow bg-light mt-3">
          <button class="btn btn-dark btn-block" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            Vehicle Information
          </button>
          <div class="collapse" id="collapseExample">
            <div class="card card-body">
              <p class="card-text">Make: <span id="make">Jeep</span></p>
              <p class="card-text">Model: <span id="model">CJ7</span></p>
              <p class="card-text">Year: <span id="year">1983</span></p>
              <p class="card-text">Current Mileage: <span id="currentMileage">260,414</span></p>
            </div>
          </div>
        </div>
        
        <!-- for increase -->
        <div class="card border-success shadow bg-light mt-3 d-none" id="increase">
          <div class="card-body">
            <h5 class="card-title pb-2">Current MPG: <span id="currentMPG">14.2</span>
              <span id="mpgArrow"><i class="bi bi-arrow-up-square-fill float-right text-success"></i></span>
            </h5>
            <p>Next Fill Up: <span id="lastFillUp">260,452</span></p>
            <p>Last Fill Up: <span id="lastFillUp">260,312</span></p>
          </div>
        </div>
        <!-- for neutral -->
        <div class="card border-info shadow bg-light mt-3 d-none" id="neutral">
          <div class="card-body">
            <h5 class="card-title pb-2">Current MPG: <span id="currentMPG">14.2</span>
              <span id="mpgArrow"><i class="bi bi-dash-square-fill float-right text-info"></i></span>
            </h5>
            <p>Next Fill Up: <span id="lastFillUp">260,452</span></p>
            <p>Last Fill Up: <span id="lastFillUp">260,312</span></p>
          </div>
        </div>
        <!-- for decrease -->
        <div class="card border-danger shadow bg-light mt-3 d-none" id="decrease">
          <div class="card-body">
            <h5 class="card-title pb-2">Current MPG: <span id="currentMPG">14.1</span>
              <span id="mpgArrow"><i class="bi bi-arrow-down-square-fill float-right text-danger"></i></span>
            </h5>
            <p>Next Fill Up: <span id="lastFillUp">260,452</span></p>
            <p>Last Fill Up: <span id="lastFillUp">260,312</span></p>
          </div>
        </div>
      </div>
      <div class="col-sm-8 mt-3">
  
        <div class="card shadow bg-light mt-3">
          <div class="card-header">
            <div class="dropdown">
              <button class="btn btn-dark" type="button" id="yearDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Select year
              </button>
              <div class="dropdown-menu" aria-labelledby="yearDropdown">
                <a class="dropdown-item" href="#" onclick="showGraphByYear(2021)">2021</a>
                <a class="dropdown-item" href="#" onclick="showGraphByYear(2022)">2022</a>
                <a class="dropdown-item" href="#" onclick="showGraphByYear(2023)">2023</a>
              </div>
            </div>
          </div>
          <div class="card-body">
            <canvas id="myChart"></canvas>
          </div>
        </div>
        
        <div class="card shadow bg-light mt-3">
          <div class="card-body">
            <canvas id="servicesChart"></canvas>
          </div>
        </div>
      </div>

      
      
  
    </div>
  </div>

  <hr class="featurette-divider text-light mt-5" />
  
  <div class="container-sm mt-3">
    <footer>
      <div class="row text-dark text-center">
        <div class="col-12 text-center mx-auto mt-3">
          <h2 class="text-secondary">About MPG and Maintenance Tracker Application</h2>
          <p>
            <br>
            Our MPG and Maintenance Tracker Application is designed to help vehicle owners keep track of their vehicle's fuel efficiency and maintenance needs in one easy-to-use platform.
            Our mission is to help vehicle owners save money and reduce their environmental impact by providing them with the tools and resources they need to make informed decisions about their vehicle's fuel efficiency and maintenance.
            Our application allows users to track their vehicle's fuel consumption, calculate their MPG, and receive personalized recommendations for improving their vehicle's fuel efficiency. 
            Users can also log their vehicle's maintenance history, set reminders for upcoming maintenance tasks, and receive alerts when maintenance is due.
            We are committed to providing our users with a seamless and user-friendly experience, and we are constantly working to improve and enhance our application based on user feedback and the latest industry trends.
            Thank you for choosing our MPG and Maintenance Tracker Application. We look forward to helping you save money and reduce your environmental impact! 
          </p>
        </div>
      </div>
      <div class="row text-dark">
        <div class="col">
          <h3 class="text-center text-secondary">Contact Us</h3>
          <div>
            <h5><b>Email</b></h5>
            <p>eastonnye@gmail.com</p>
          </div>
        </div>
      </div>
    </footer>
  </div>

	<!-- Include jQuery and Bootstrap JS -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
    //call this function with the latest mpg calculation from backend
    window.onload = toggleCardVisibility('increase')

    function toggleCardVisibility(cardId) {
      const card = document.getElementById(cardId);
      if (card) {
        if (card.classList.contains('d-none')) {
          card.classList.remove('d-none');
        } else {
          card.classList.add('d-none');
        }
      }
    }
  </script>
  <script>
    //function to update the chart based on year selected
    function showGraphByYear(year) {
      // TODO: Update the chart data and options based on the selected year

      myChart.update();
    }

    //pass this data from backend as an object
    const data = {
      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
      datasets: [{
        label: 'MPG',
        data: [0, 10, 5, 2, 20, 30, 45],
        borderColor: 'rgba(128, 128, 128, .2)',
        borderWidth: 1,
        pointBackgroundColor: (context) => {
          const index = context.dataIndex;
          const value = context.dataset.data[index];
          const previousValue = context.dataset.data[index - 1];

          if (index === 0) {
            // First point, no previous value to compare to
            return 'rgb(128, 128, 128)';
          } else if (value > previousValue) {
            // Value increased from previous point
            return 'green';
          } else if (value < previousValue) {
            // Value decreased from previous point
            return 'red';
          } else {
            // Value is the same as previous point
            return 'gray';
          }
        },
        pointRadius: 6 // set the size of the points
      }]
    };

    const options = {
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true
          }
        }]
      }
    };

    const ctx = document.getElementById('myChart').getContext('2d');
    const myChart = new Chart(ctx, {
      type: 'line',
      data: data,
      options: options
    });

    window.addEventListener('resize', function() {
      // Resize the chart
      myChart.resize();
    });


  </script>
  <script>
      const serviceData = [
                          { type: 'Oil Change', frequency: 10 },
                          { type: 'Tire Rotation', frequency: 5 },
                          { type: 'Brake Service', frequency: 3 },
                          { type: 'Alignment', frequency: 2 },
                          { type: 'Air Filter Replacement', frequency: 2 },
                        ];

      const servicesChart = new Chart(document.getElementById('servicesChart'), {
      type: 'bar',
      data: {
        labels: serviceData.map(service => service.type),
        datasets: [{
          label: 'Frequency of Services',
          data: serviceData.map(service => service.frequency),
          backgroundColor: 'rgba(43, 194, 240, .6)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
    // Add an event listener to the window resize event
    window.addEventListener('resize', function() {
      // Resize the chart
      servicesChart.resize();
    });
  </script>
</body>
</html>
